services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile.app
    container_name: app
    command: poetry run uvicorn app.main:app --host 0.0.0.0 --port 7999 --reload
    volumes:
      - .:/app
    ports:
      - "7999:7999"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - BROKER_URL=${BROKER_URL}
      - REDIS_URL=${REDIS_URL}

  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    container_name: worker
    command: poetry run celery -A app.celery worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - BROKER_URL=${BROKER_URL}
      - REDIS_URL=${REDIS_URL}

  beat:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    container_name: beat
    command: poetry run celery -A app.celery beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - BROKER_URL=${BROKER_URL}
      - REDIS_URL=${REDIS_URL}
      - COINMARKETCAP_API_URL=${COINMARKETCAP_API_URL}

  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
